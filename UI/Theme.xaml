<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <!-- Colors -->
  <Color x:Key="Color.WindowBackground">#FF2D2D30</Color>
  <Color x:Key="Color.Surface">#FF3E3E42</Color>
  <Color x:Key="Color.Border">#FF555558</Color>
  <Color x:Key="Color.Text">#FFE8E8E8</Color>
  <Color x:Key="Color.TextSecondary">#FFB0B0B0</Color>
  <Color x:Key="Color.Accent">#FF0A84FF</Color>
  <Color x:Key="Color.Accent.Hover">#FF0077E6</Color>
  <Color x:Key="Color.Accent.Pressed">#FF0062C7</Color>
  <Color x:Key="Color.Muted">#FF404045</Color>
  <Color x:Key="Color.Success">#FF00D084</Color>
  <Color x:Key="Color.Error">#FFFF5555</Color>

  <!-- Brushes -->
  <SolidColorBrush x:Key="WindowBackgroundBrush" Color="{StaticResource Color.WindowBackground}"/>
  <SolidColorBrush x:Key="SurfaceBrush" Color="{StaticResource Color.Surface}"/>
  <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource Color.Border}"/>
  <SolidColorBrush x:Key="TextBrush" Color="{StaticResource Color.Text}"/>
  <SolidColorBrush x:Key="TextSecondaryBrush" Color="{StaticResource Color.TextSecondary}"/>
  <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource Color.Accent}"/>
  <SolidColorBrush x:Key="AccentHoverBrush" Color="{StaticResource Color.Accent.Hover}"/>
  <SolidColorBrush x:Key="AccentPressedBrush" Color="{StaticResource Color.Accent.Pressed}"/>
  <SolidColorBrush x:Key="MutedBrush" Color="{StaticResource Color.Muted}"/>
  <SolidColorBrush x:Key="SuccessBrush" Color="{StaticResource Color.Success}"/>
  <SolidColorBrush x:Key="ErrorBrush" Color="{StaticResource Color.Error}"/>
  <!-- Titlebar close button brushes -->
  <SolidColorBrush x:Key="TitlebarButtonBrush" Color="#FF555558"/>
  <SolidColorBrush x:Key="TitlebarButtonHoverBrush" Color="#FF666669"/>
  <SolidColorBrush x:Key="TitlebarButtonPressedBrush" Color="#FF777777"/>
  <SolidColorBrush x:Key="TitlebarButtonBorderBrush" Color="#FF666666"/>

  <!-- Metrics -->
  <CornerRadius x:Key="Radius.Small">6</CornerRadius>
  <CornerRadius x:Key="Radius.Medium">10</CornerRadius>
  <Thickness x:Key="Padding.Small">8,6</Thickness>
  <Thickness x:Key="Padding.Medium">12,8</Thickness>

  <!-- Global text defaults -->
  <Style TargetType="TextBlock">
    <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
    <Setter Property="TextWrapping" Value="Wrap"/>
  </Style>
  <Style TargetType="Label">
    <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="FontWeight" Value="SemiBold"/>
  </Style>

  <!-- Button base template with rounded corners -->
  <Style x:Key="ButtonBaseStyle" TargetType="Button">
    <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
    <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Padding" Value="{StaticResource Padding.Small}"/>
    <Setter Property="FontWeight" Value="SemiBold"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border x:Name="bd"
                  CornerRadius="{StaticResource Radius.Small}"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Margin="2"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="bd" Property="Background" Value="{StaticResource MutedBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="bd" Property="Background" Value="#FF555560"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Accent/Primary button -->
  <Style x:Key="AccentButton" TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}">
    <Setter Property="Foreground" Value="White"/>
    <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border x:Name="bd"
                  CornerRadius="{StaticResource Radius.Small}"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="bd" Property="Background" Value="{StaticResource AccentHoverBrush}"/>
              <Setter TargetName="bd" Property="BorderBrush" Value="{StaticResource AccentHoverBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="bd" Property="Background" Value="{StaticResource AccentPressedBrush}"/>
              <Setter TargetName="bd" Property="BorderBrush" Value="{StaticResource AccentPressedBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Minimal circle button for mac traffic lights -->
  <Style x:Key="TrafficLightButton" TargetType="Button">
    <Setter Property="Width" Value="12"/>
    <Setter Property="Height" Value="12"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid>
            <Ellipse Fill="{TemplateBinding Background}" StrokeThickness="0"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Opacity" Value="0.9"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Opacity" Value="0.75"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Neutral filled button (non-accent) -->
  <Style x:Key="NeutralButton" TargetType="Button">
    <Setter Property="Foreground" Value="#FFE8E8E8"/>
    <Setter Property="Background" Value="{StaticResource TitlebarButtonBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource TitlebarButtonBorderBrush}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Padding" Value="{StaticResource Padding.Small}"/>
    <Setter Property="FontWeight" Value="SemiBold"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border x:Name="bd"
                  CornerRadius="{StaticResource Radius.Small}"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Margin="2"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="bd" Property="Background" Value="{StaticResource TitlebarButtonHoverBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="bd" Property="Background" Value="{StaticResource TitlebarButtonPressedBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Round titlebar close button -->
  <Style x:Key="TitlebarCloseButton" TargetType="Button">
    <Setter Property="Width" Value="24"/>
    <Setter Property="Height" Value="24"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Foreground" Value="#FFE8E8E8"/>
    <Setter Property="Background" Value="{StaticResource TitlebarButtonBrush}"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid>
            <Ellipse x:Name="bg" Fill="{TemplateBinding Background}" Stroke="{StaticResource TitlebarButtonBorderBrush}" StrokeThickness="1"/>
            <TextBlock Text="âœ•" FontWeight="Bold" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="bg" Property="Fill" Value="{StaticResource TitlebarButtonHoverBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="bg" Property="Fill" Value="{StaticResource TitlebarButtonPressedBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- TextBox style with rounded corners -->
  <Style TargetType="TextBox">
    <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
    <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Padding" Value="{StaticResource Padding.Small}"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TextBox">
          <Border x:Name="bd"
                  CornerRadius="{StaticResource Radius.Small}"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <ScrollViewer x:Name="PART_ContentHost"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="True">
              <Setter TargetName="bd" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- TabControl cleaner look -->
  <Style TargetType="TabControl">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TabControl">
          <Grid ClipToBounds="True">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TabPanel Grid.Row="0" IsItemsHost="True" Background="Transparent" Margin="8,8,8,4" HorizontalAlignment="Center"/>
            <ContentPresenter Grid.Row="1" ContentSource="SelectedContent" Margin="8"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- TabItem pill style -->
  <Style TargetType="TabItem">
    <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
    <Setter Property="Padding" Value="14,8"/>
    <Setter Property="FontWeight" Value="SemiBold"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TabItem">
          <Border x:Name="bd" Background="Transparent" CornerRadius="{StaticResource Radius.Small}" Padding="0" Margin="4,0">
            <Grid>
              <ContentPresenter Margin="12,6" ContentSource="Header"
                                HorizontalAlignment="Center" VerticalAlignment="Center"/>
              <Border x:Name="indicator" Height="2" CornerRadius="1" Background="{StaticResource AccentBrush}" VerticalAlignment="Bottom" Opacity="0"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
              <Setter TargetName="bd" Property="Background" Value="{StaticResource MutedBrush}"/>
              <Setter TargetName="indicator" Property="Opacity" Value="1"/>
              <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True"/>
                <Condition Property="IsSelected" Value="False"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="bd" Property="Background" Value="#FF484850"/>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ScrollBar styles for dark theme -->
  <Style TargetType="ScrollBar">
    <Setter Property="Background" Value="#FF404045"/>
    <Setter Property="BorderBrush" Value="#FF555558"/>
    <Setter Property="Foreground" Value="#FF666669"/>
    <Setter Property="Width" Value="12"/>
    <Setter Property="MinWidth" Value="12"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ScrollBar">
          <Grid x:Name="GridRoot" Width="12" Background="{TemplateBinding Background}">
            <Grid.RowDefinitions>
              <RowDefinition Height="0.00001*"/>
            </Grid.RowDefinitions>
            <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="True" Focusable="False">
              <Track.Thumb>
                <Thumb x:Name="Thumb" Background="#FF666669" Style="{DynamicResource ScrollBarThumbVertical}"/>
              </Track.Thumb>
              <Track.IncreaseRepeatButton>
                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="False"/>
              </Track.IncreaseRepeatButton>
              <Track.DecreaseRepeatButton>
                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="False"/>
              </Track.DecreaseRepeatButton>
            </Track>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
              <Setter TargetName="GridRoot" Property="LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="-90"/>
                </Setter.Value>
              </Setter>
              <Setter TargetName="PART_Track" Property="LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="-90"/>
                </Setter.Value>
              </Setter>
              <Setter Property="Width" Value="Auto"/>
              <Setter Property="Height" Value="12"/>
              <Setter TargetName="Thumb" Property="Tag" Value="Horizontal"/>
              <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand"/>
              <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ScrollBarThumbVertical" TargetType="Thumb">
    <Setter Property="OverridesDefaultStyle" Value="True"/>
    <Setter Property="Background" Value="#FF666669"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="IsTabStop" Value="False"/>
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Thumb">
          <Border x:Name="rectangle" Background="{TemplateBinding Background}" CornerRadius="3" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" TargetName="rectangle" Value="#FF777777"/>
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
              <Setter Property="Background" TargetName="rectangle" Value="#FF888888"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ScrollViewer style to use custom scrollbars -->
  <Style TargetType="ScrollViewer">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ScrollViewer">
          <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
            <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
            <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>
